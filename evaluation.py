from nltk.translate.bleu_score import sentence_bleu, SmoothingFunction
import numpy as np


def calculate_bleu_score(reference, candidate):
    """
    Calculate BLEU score for a single reference and candidate pair.
    
    Args:
        reference (str): The ground truth reference text.
        candidate (str): The generated answer text.
    
    Returns:
        float: BLEU score for the candidate text.
    """
    # Tokenize reference and candidate sentences
    reference_tokens = reference.split()
    candidate_tokens = candidate.split()
    
    # Calculate BLEU score with smoothing
    smoothie = SmoothingFunction().method4  # Apply smoothing for better BLEU score
    bleu_score = sentence_bleu([reference_tokens], candidate_tokens, smoothing_function=smoothie)
    return bleu_score


def evaluate_bleu(reference_answers, generated_answers):
    """
    Evaluate the BLEU scores for a set of reference and generated answers.
    
    Args:
        reference_answers (list): List of reference answers (ground truth).
        generated_answers (list): List of answers generated by the pipeline.
    
    Returns:
        dict: Dictionary containing individual BLEU scores and the average BLEU score.
    """
    if len(reference_answers) != len(generated_answers):
        raise ValueError("The number of reference and generated answers must be the same!")

    bleu_scores = []
    for ref, gen in zip(reference_answers, generated_answers):
        bleu = calculate_bleu_score(ref, gen)
        bleu_scores.append(bleu)

    # Calculate average BLEU score
    avg_bleu = np.mean(bleu_scores)
    return {
        "individual_scores": bleu_scores,
        "average_score": avg_bleu
    }


if __name__ == "__main__":
    # Example reference and generated answers
    reference_answers = [
        "Legal due process ensures fair treatment through the judicial system.",
        "Tort law deals with civil wrongs and provides remedies to those harmed.",
        "A contract requires mutual agreement and consideration."
    ]

    generated_answers = [
        "Legal due process guarantees fair treatment in the judicial system.",
        "Tort law addresses civil wrongs and offers remedies to harmed individuals.",
        "A contract must have mutual agreement and consideration."
    ]

    # Evaluate BLEU scores
    results = evaluate_bleu(reference_answers, generated_answers)

    print("Individual BLEU Scores:")
    for i, score in enumerate(results["individual_scores"]):
        print(f"Pair {i + 1}: BLEU Score = {score:.4f}")

    print(f"\nAverage BLEU Score: {results['average_score']:.4f}")
